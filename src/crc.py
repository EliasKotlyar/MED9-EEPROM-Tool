from src.blocks.abstract_block import AbstractBlock
from src.blocks.block_calib import BlockCALIB


def getChecksum(block: AbstractBlock):
    dump = block.rawdata
    checksum = 0
    for i in range(0, len(dump) - 2):
        checksum += dump[i]

    checksum = 0xFFFF ^ checksum
    # checksum -= self.blocknr
    return checksum


if __name__ == "__main__":
    calib1 = bytes([
        0x08, 0x01, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00,
        0x00, 0x80, 0x00, 0x80, 0x80, 0xFF, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x02, 0x00, 0xF8, 0xFA, 0x7D
    ])
    block = BlockCALIB()
    print(block.parse(calib1))
    print(getChecksum(block))

    calib2 = bytes([
        0x08, 0x01, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00,
        0x00, 0x80, 0x00, 0x80, 0x80, 0xFF, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x02, 0x00, 0xF9, 0xFA, 0x7C
    ])
    block = BlockCALIB()
    print(block.parse(calib2))
    print(getChecksum(block))
